{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e45c621c-6c9e-4706-ab02-18abbfb0ed5b",
   "metadata": {},
   "outputs": [],
   "source": [
    "import streamlit as st\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Page setup\n",
    "st.set_page_config(page_title=\"SmartShopAI Dashboard\", layout=\"wide\")\n",
    "st.title(\" SmartShopAI - Personalized E-Commerce Intelligence\")\n",
    "st.markdown(\"Forecast customer demand, recommend products, and tailor marketing — all in one dashboard.\")\n",
    "\n",
    "# Sidebar input\n",
    "st.sidebar.header(\" Select Customer\")\n",
    "selected_user = st.sidebar.text_input(\"Enter Customer ID\", value=\"0\")\n",
    "\n",
    "# Load data files\n",
    "@st.cache_data\n",
    "def load_forecast():\n",
    "    return pd.read_csv(\"forecast_per_customer_demo.csv\")\n",
    "\n",
    "@st.cache_data\n",
    "def load_recommendations():\n",
    "    return pd.read_csv(\"recs_multiuser_demo.csv\")\n",
    "\n",
    "forecast_df = load_forecast()\n",
    "recs_df = load_recommendations()\n",
    "\n",
    "# Validate input\n",
    "try:\n",
    "    customer_id = int(selected_user)\n",
    "except ValueError:\n",
    "    st.error(\"Please enter a valid numeric Customer ID\")\n",
    "    st.stop()\n",
    "\n",
    "# PHASE 1: Forecast Graph\n",
    "st.subheader(\" Forecasted Activity for Next 7 Days\")\n",
    "cust_forecast = forecast_df[forecast_df['customer_id'] == customer_id]\n",
    "\n",
    "if cust_forecast.empty:\n",
    "    st.warning(\"No forecast available for this customer.\")\n",
    "else:\n",
    "    fig, ax = plt.subplots()\n",
    "    ax.plot(cust_forecast['day'], cust_forecast['predicted_activity'], marker='o')\n",
    "    ax.set_title(f\"Predicted Activity for Customer {customer_id}\")\n",
    "    ax.set_ylabel(\"Predicted Activity\")\n",
    "    ax.set_xlabel(\"Day\")\n",
    "    ax.grid(True)\n",
    "    st.pyplot(fig)\n",
    "\n",
    "    # PHASE 3: Marketing Suggestion\n",
    "    avg_activity = cust_forecast['predicted_activity'].mean()\n",
    "    st.subheader(\" Marketing Insight\")\n",
    "    if avg_activity >= 2:\n",
    "        st.success(\" High predicted engagement. Offer a loyalty reward or bundle deal.\")\n",
    "    elif 1 <= avg_activity < 2:\n",
    "        st.info(\"Moderate activity. Consider sending a product reminder or wishlist notification.\")\n",
    "    else:\n",
    "        st.warning(\" Low activity expected. Try offering a discount to re-engage this customer.\")\n",
    "\n",
    "# PHASE 2: Product Recommendations\n",
    "st.subheader(\"🛍️ Recommended Products for Customer\")\n",
    "cust_recs = recs_df[recs_df['customer_id'] == customer_id]\n",
    "\n",
    "if cust_recs.empty:\n",
    "    st.warning(\"No product recommendations found for this customer.\")\n",
    "else:\n",
    "    st.dataframe(\n",
    "        cust_recs[['item_id', 'category_id', 'score']]\n",
    "        .sort_values(by='score', ascending=False)\n",
    "        .reset_index(drop=True)\n",
    "    )\n",
    "\n",
    "# Footer\n",
    "st.markdown(\"---\")\n",
    "st.caption(\"SmartShopAI © 2025 | Built with LSTM, Streamlit & Customer Intelligence\")\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [conda env:base] *",
   "language": "python",
   "name": "conda-base-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
